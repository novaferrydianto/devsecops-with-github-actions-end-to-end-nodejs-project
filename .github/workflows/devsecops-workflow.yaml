name: Build, Test & Sec Scans (Node.js)

on:
  push:
  pull_request:

concurrency:
  group: node-sec-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  security-events: write
  actions: read

env:
  NODE_VERSION: '18.x'
  TARGET_URL: 'http://example.com/' # change this to your app URL

jobs:
  build_test:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (ci)
        run: npm ci

      - name: Lint (optional)
        run: |
          if [ -f package.json ] && jq -e '.scripts.lint' package.json >/dev/null 2>&1; then
            npm run lint
          else
            echo "No lint script; skipping."
          fi

      - name: Run unit tests
        run: |
          if [ -f package.json ] && jq -e '.scripts.test' package.json >/dev/null 2>&1; then
            npm test -- --ci || npm test
          else
            echo "No test script; skipping."
          fi

      - name: Upload test artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: junit-or-coverage
          path: |
            coverage/**
            junit*.xml
          if-no-files-found: ignore

  secrets_trufflehog:
    name: Secrets Scan (TruffleHog)
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run TruffleHog
        run: |
          pipx install trufflehog
          trufflehog filesystem . \
            --no-update \
            --json > trufflehog-report.json || true
          jq . trufflehog-report.json || true

      - name: Upload TruffleHog Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-report
          path: trufflehog-report.json
          if-no-files-found: ignore

  sast_sonarcloud:
    name: SAST (SonarCloud)
    runs-on: ubuntu-latest
    needs: build_test
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sca_snyk:
    name: SCA (Snyk)
    runs-on: ubuntu-latest
    needs: build_test
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (ci)
        run: npm ci

      - name: Snyk Test (SARIF)
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: >
            test --severity-threshold=low
            --sarif-file-output=snyk.sarif
        continue-on-error: true

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      - name: Snyk Monitor (optional for dashboard)
        if: ${{ github.event_name == 'push' }}
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: monitor

  dast_zap:
    name: DAST (OWASP ZAP Baseline)
    runs-on: ubuntu-latest
    needs: [sca_snyk, sast_sonarcloud, secrets_trufflehog]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'zaproxy/zap-stable'
          target: ${{ env.TARGET_URL }}
          cmd_options: '-a'
          fail_action: false
          allow_issue_writing: true
          issue_title: "ZAP Baseline Report"

      - name: Upload ZAP Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            report_html.html
            report_md.md
            report_json.json
          if-no-files-found: ignore
