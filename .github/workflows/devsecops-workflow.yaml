name: Build code, run unit test, run SAST, SCA, DAST security scans for NodeJs App

on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * 0' # Optional: weekly Sunday auto security scan

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: Run unit tests and SAST scan on the source code
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - run: npm install

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=devsecopsganodejs
            -Dsonar.projectKey=devsecopsganodejs

  codeql:
    runs-on: ubuntu-latest
    needs: build
    name: Run GitHub Advanced Security (CodeQL)
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  security:
    runs-on: ubuntu-latest
    needs: codeql
    name: Run the SCA scan on the source code
    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions-node@04f4b9986a661aaee2f60b07c46493c69b5f7f9d
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  zap_scan:
    runs-on: ubuntu-latest
    needs: security
    name: Run DAST scan on the web application
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fix permissions
        run: sudo chmod -R 777 ${{ github.workspace }}

      - name: Run ZAP Baseline Scan
        id: zap
        uses: zaproxy/action-baseline@v0.11.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'zaproxy/zap-stable'
          target: 'http://example.com/' # Ganti dengan URL aplikasi kamu
          cmd_options: '-a'
          issue_title: 'ZAP Scan Baseline Report'
          fail_action: false
          allow_issue_writing: false
        env:
          ZAP_DOCKER_EXTRA_ARGS: '--user root'

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            report_html.html
            report_md.md
            report_json.json

      - name: Generate Conditional PR Comment Summary
        id: zap_summary
        if: always()
        run: |
          WARNINGS=$(grep -c 'WARN-NEW' report_md.md || echo 0)
          FAILS=$(grep -c 'FAIL-NEW' report_md.md || echo 0)
          echo "warnings=$WARNINGS" >> $GITHUB_OUTPUT
          echo "fails=$FAILS" >> $GITHUB_OUTPUT

          if [ "$WARNINGS" -gt 0 ] || [ "$FAILS" -gt 0 ]; then
            echo "### ⚠️ OWASP ZAP Findings Detected" > zap_summary.md
            echo "- Target: http://example.com/" >> zap_summary.md
            echo "- Warnings: $WARNINGS" >> zap_summary.md
            echo "- Fails: $FAILS" >> zap_summary.md
            echo "" >> zap_summary.md
            echo "📄 [Download full ZAP report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> zap_summary.md
          else
            echo "### ✅ No OWASP ZAP findings detected" > zap_summary.md
          fi

      - name: Comment ZAP Summary on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: zap_summary.md
          recreate: true
