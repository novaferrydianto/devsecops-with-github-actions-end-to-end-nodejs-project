name: Build code, run unit test, run SAST, SCA, DAST security scans for NodeJs App

on:
  push:
  pull_request:

permissions:
  contents: read
  pull-requests: read
  security-events: write

env:
  NODE_VERSION: 18
  TARGET_URL: 'http://example.com/' # 🔁 replace with real staging or prod URL

jobs:
  build:
    runs-on: ubuntu-latest
    name: Run unit tests and SAST scan on the source code
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies (resilient)
        run: |
          if [ -f package-lock.json ]; then
            echo "🔍 Using npm ci for reproducible install..."
            npm ci || (echo "⚠️ npm ci failed — falling back to npm install" && npm install)
          else
            echo "No lockfile found — running npm install"
            npm install
          fi

      - name: Run unit tests (if available)
        run: |
          if [ -f package.json ] && jq -e '.scripts.test' package.json >/dev/null 2>&1; then
            npm test || echo "⚠️ Unit tests failed (check reports)"
          else
            echo "ℹ️ No test script found, skipping tests."
          fi

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=devsecopsganodejs
            -Dsonar.projectKey=devsecopsganodejs
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.test.inclusions=**/*.spec.js,**/*.test.js

  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run SCA (Snyk)
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: |
          npm ci || npm install

      - name: Run Snyk vulnerability scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: test --severity-threshold=low --sarif-file-output=snyk.sarif

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  zap_scan:
    runs-on: ubuntu-latest
    needs: security
    name: Run DAST scan (OWASP ZAP)
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run ZAP baseline scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'zaproxy/zap-stable'
          target: ${{ env.TARGET_URL }}
          cmd_options: '-a'
          issue_title: 'OWASP ZAP Baseline Report'
          fail_action: false
          allow_issue_writing: true

      - name: Upload ZAP report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            report_html.html
            report_md.md
            report_json.json
          if-no-files-found: ignore
